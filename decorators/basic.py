"""Основы работы с декораторами"""

# Основная идея декоратора в добавлении дополнительного поведения функции или
# классу. Пример ниже.


def base_decorator(func):  # Функция декоратор принимающая аргументом функцию.
    def wrapper(*args, **kwargs):  # Функция обёртка добовляющая доп. поведение
        print('Поведение до выполнения функции')
        func(*args, **kwargs)
        print('Поведение после выполнения функции')
    return wrapper


@base_decorator
def print_hi():
    print('Hi')


print_hi()
